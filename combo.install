<?php

/**
 * Implements hook_install().
 */
function combo_install() {
  $types = array(
    // A node type that will contain the combo field.
    array(
      'type' => 'test_combo',
      'name' => 'Test combo field',
      'base' => 'node_content',
      'description' => '',
      'custom' => 1,
      'modified' => 1,
      'locked' => 0,
    ),
    // A node type receiving the values of the combo field (= the X-entity).
    array(
      'type' => 'combo_value',
      'name' => 'Combo-field value',
      'base' => 'node_content',
      'description' => '',
      'custom' => 1,
      'modified' => 1,
      'locked' => 0,
    ),
  );
  foreach ($types as $type) {
    $type = node_type_set_defaults($type);
    node_type_save($type);
  }

  $fields = array(
    // The fields in the combo.
    array(
      'field_name' => 'field_combo_1',
      'type' => 'number_integer',
    ),
    array(
      'field_name' => 'field_combo_2',
      'type' => 'number_integer',
      'cardinality' => FIELD_CARDINALITY_UNLIMITED,
    ),
    // The combo field.
    array(
      'field_name' => 'field_combo',
      'type' => 'combo',
      'cardinality' => FIELD_CARDINALITY_UNLIMITED,
    ),
    // A regular field.
    array(
      'field_name' => 'field_basic',
      'type' => 'number_integer',
    ),
  );
  $instances = array(
    // Attach the two fields in the combo to the 'combo_value' node type.
    array(
      'field_name' => 'field_combo_1',
      'entity_type' => 'node',
      'bundle' => 'combo_value',
      'settings' => array('min' => 0, 'max' => 5),
    ),
    array(
      'field_name' => 'field_combo_2',
      'entity_type' => 'node',
      'bundle' => 'combo_value',
      'settings' => array('min' => 0, 'max' => 5),
    ),
    // Attach the combo-field and a regular number field to the 'test' node type.
    array(
      'field_name' => 'field_combo',
      'entity_type' => 'node',
      'bundle' => 'test_combo',
    ),
    array(
      'field_name' => 'field_basic',
      'entity_type' => 'node',
      'bundle' => 'test_combo',
      'settings' => array('min' => 0, 'max' => 5),
    ),
  );
  foreach ($fields as $field) {
    field_create_field($field);
  }
  foreach ($instances as $instance) {
    field_create_instance($instance);
  }
}